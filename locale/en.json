{
    "error_bot_token": "You need to configure the bot token with the TELEGRAM_TOKEN variable",
    "error_bot_telegram_admin": "You need to configure the chatId of the user who will interact with the bot with the TELEGRAM_ADMIN variable",
    "error_bot_container_name": "Container name needs to be set in the CONTAINER_NAME variable",
    "error_bot_telegram_thread": "The variable TELEGRAM_THREAD is the thread within a supergroup, it is a numeric value. It has been set to $1.",
    "error_bot_check_updates": "The CHECK_UPDATES variable tells the program whether or not it will perform a check for updates, the possible values are 1 or 0. 1 is active, 0 is disabled.",
    "error_bot_check_updates_interval": "The CHECK_UPDATE_EVERY_HOURS variable tells the program how many hours it should check for updates. By default it is 4 hours.",
    "error_bot_extended_messages": "The variable EXTENDED_MESSAGES tells the program whether or not it will show more information messages than normal, the possible values are 1 or 0. 1 is active, 0 is disabled.",
    "error_can_not_do_that": "❌ Can't do that.",
    "error_stopping_container_with_error": "Could not stop container $1. Error: [$2]",
    "error_stopping_container": "❌ Failed to stop container *$1*. See bot logs for more information.",
    "error_restarting_container_with_error": "Could not restart container $1. Error: [$2]",
    "error_restarting_container": "❌ Failed to restart container *$1*. See bot logs for more information.",
    "error_starting_container_with_error": "Could not start container $1. Error: [$2]",
    "error_starting_container": "❌ Failed to start container *$1*. See bot logs for more information.",
    "error_showing_logs_container_with_error": "The logs for container $1 could not be shown. Error: [$2]",
    "error_showing_logs_container": "❌ The logs for container *$1* could not be displayed. See the bot logs for more information.",
    "error_showing_compose_container_with_error": "Could not show docker compose for container $1. Error: [$2]",
    "error_showing_compose_container": "❌ Failed to show docker compose for container *$1*. See bot logs for more information.",
    "error_showing_info_container_with_error": "Could not display information for container $1. Error: [$2]",
    "error_showing_info_container": "❌ The information for container *$1* could not be displayed. See the bot logs for more information.",
    "error_renaming_container_with_error": "Could not rename container $1. Error: [$2]",
    "error_renaming_container": "❌ Failed to rename container *$1*. See bot logs for more information.",
    "error_deleting_container_with_error": "Could not delete container $1. Error: [$2]",
    "error_deleting_container": "❌ Failed to delete container *$1*. See bot logs for more information.",
    "error_creating_new_container_with_error": "Error creating and/or running the new container. The container information is: [$1]",
    "error_updating_container_with_error": "Could not update container $1. Error: [$2]",
    "error_updating_container": "❌ Failed to update container *$1*. See bot logs for more information.",
    "error_sending_updates": "Could not update container $1. Error: [$2]",
    "error_monitor_daemon": "An error occurred in the event daemon. Relaunching... Error: [$1]",
    "error_update_daemon": "An error occurred in the update daemon. Relaunching... Error: [$1]",
    "error_checking_update_with_error": "Could not check update: [$1]",
    "error_writing_cache_with_error": "Error writing to cache. Key [$1]",
    "error_sending_message": "Could not send message to $1: $2. Error: [$3]",
    "error_sending_document": "Could not send document to $1. Error: [$2]",
    "error_getting_architecture": "Error getting system architecture. Error: [$1]",
    "error_getting_tags": "❌ Could not get tags from *$1*. Repository not supported at this time.",
    "error_getting_tags_with_error": "Error getting $1 tags. Error: [$2]",
    "debug_update_not_cached": "Queried for update $1 and it is not available: [$2]",
    "debug_updating_container": "Updating container $1",
    "debug_pulling_image": "Pulling image [$1]",
    "debug_pulled_image": "$1 pull completed",
    "debug_stopping_container": "Container $1 is running. It will be stopped.",
    "debug_renaming_old_container": "Renaming old container before deleting [$1] -> [$1_old]",
    "debug_creating_new_container": "Creating the container with the new image [$1]",
    "debug_updated_container": "Container $1 updated.",
    "debug_container_need_to_be_started": "The container was previously started, I start it.",
    "debug_container_deleting_old_container": "Deleting old container $1",
    "debug_deleting_image": "Deleting image [$1]",
    "debug_image_can_not_be_deleted": "Local image of $1 cannot be deleted. Reason: [$2]",
    "debug_ignore_check_for_update": "Checking update: $1 omitted",
    "debug_checking_update": "Checking update: $1 ($2): LOCAL IMAGE [$3] - REMOTE IMAGE [$4]",
    "debug_update_detected": "$1 update detected! Deleting downloaded image [$2]",
    "debug_update_already_notified": "This update has already been reported. It is not notified.",
    "debug_notifying_update": "Notifying about the update...",
    "debug_waiting_next_check_updates": "Update checks completed, waiting $1 hours.",
    "debug_find_container": "Finding container id [$1]",
    "debug_container_found": "Container [$1] found",
    "debug_container_not_found": "Container [$1] not found",
    "debug_starting_bot": "Starting Docker-Controler-Bot",
    "debug_starting_monitor_daemon": "State monitoring daemon enabled",
    "debug_started_update_daemon": "Update daemon activated",
    "debug_disabled_update_daemon": "Update daemon disabled",
    "warning_not_admin": "User $1 (@$2) is not an administrator and has tried to use the bot.",
    "user_not_admin": "❌ This bot does not belong to you.\n\nIf you want to control your docker containers via telegram deploy me on your server.\n\nTake a look at [DockerHub](https://hub.docker.com /r/dgongut/docker-controller-bot) where you will find a docker-compose. \n\nAre you curious? The code is published on [GitHub](https://github.com/dgongut/docker-controller- bot).\n\nIf you have questions, ask me, I'm @dgongut",
    "menu": "*🫡 Docker Controller Bot at your service*\n\nAvailable commands:\n\n · /list Complete list of containers.\n · /run Starts a container.\n · /stop Stops a container.\n · /restart Restarts a container.\n · /delete Delete a container.\n · /checkupdate Update a container.\n · /changetag Change container tag. ⚠️\n · /logs Shows the last logs of a container.\n · /logfile Shows the last logs of a container in file format.\n · /compose Extracts the docker-compose from a container. ⚠️\n · /info Displays information about a container.\n · /version Displays the current version.\n\n⚠️ This function is in _experimental_ phase.",
    "menu_start": "Main menu",
    "menu_list": "Complete list of containers",
    "menu_run": "Start a container",
    "menu_stop": "Stops a container",
    "menu_restart": "Restart a container",
    "menu_delete": "Delete a container",
    "menu_update": "Update a container",
    "menu_change_tag": "Change container tag",
    "menu_logs": "Shows the latest logs of a container",
    "menu_logfile": "Shows the complete logs of a container in file format",
    "menu_compose": "Extract docker-compose from a container",
    "menu_info": "Displays information about a container",
    "menu_version": "Shows the current version",
    "status": "Status",
    "container_id": "Container ID",
    "used_image": "Used image",
    "image_id": "Image ID",
    "information": "Information about",
    "button_update": "⬆️ - Update",
    "button_close": "❌ - Close",
    "button_cancel": "❌ - Cancel",
    "button_delete": "❌ - Delete",
    "button_confirm_update": "⬆️ - Yes, update",
    "button_confirm_delete": "⚠️ - Yes, delete",
    "button_confirm_change_tag": "⚠️ - Yes, change it to $1",
    "active": "🟢 Active",
    "check_for_updates": "Check for updates",
    "self_update_message": "⚙️ Now the bot will restart.\n\nPlease wait a moment, this may take up to 1 minute.\n\nThe bot will notify you when it is available again.",
    "deleting": "_Deleting_ *$1*...",
    "starting": "_Starting_ *$1*...",
    "stopping": "_Stopping_ *$1*...",
    "restarting": "_Restarting_ *$1*...",
    "obtaining_info": "_Obtaining information from_ *$1*...",
    "updating": "_Updating_ *$1*...",
    "updating_downloading": "_Updating_ *$1*...\nDownloading...",
    "updating_stopping": "_Updating_ *$1*...\nStopping container...",
    "updating_creating": "_Updating_ *$1*...\nCreating container...",
    "updating_starting": "_Updating_ *$1*...\nStarting container...",
    "updating_deleting_old": "_Updating_ *$1*...\nDeleting old container...",
    "updated_container": "✅ Container *$1* successfully updated.",
    "deleted_container": "✅ Container *$1* successfully deleted.",
    "started_container": "🟢 Container *$1* has been *started*",
    "stopped_container": "🔴 Container *$1* has been *stopped*",
    "created_container": "🔵 Container *$1* has been *created*",
    "available_update": "⬆️ *Update available*:\n*$1*",
    "already_updated": "✅ *$1* container is up to date",
    "start_a_container": "🟢 Click on a container to start it",
    "stop_a_container": "🔴 Click on a container to stop it",
    "restart_a_container": "🟢 Click on a container to restart it",
    "change_tag_container": "⚙️ Click on a container to change its tag",
    "change_tag": "⚙️ Select a new tag for *$1*.",
    "show_logs": "📃 Click on a container to see its latest logs",
    "show_logsfile": "📃 Click on a container to see its logs in file mode",
    "show_compose": "📃 Click on a container to see its docker-compose.\n\nThis function is in *experimental* phase and may contain errors, it is recommended to check the docker-compose.",
    "delete_container": "⚠️ Click on a container to delete it.\nThis action cannot be undone.",
    "update_container": "⚠️ Click on a container to update it",
    "version": "⚙️ _Version: $1_\nDeveloped with ❤️ by @dgongut\n\nIf you find any bugs or suggestions, contact me.\n\nYou can find everything related to this bot at [DockerHub](https://hub.docker.com/r/dgongut/docker-controller-bot) or on [GitHub](https://github.com/dgongut/docker-controller-bot)",
    "confirm_update": "⚠️ Are you sure you want to update container *$1* with the new available image?\n\nIt is always recommended to check if the current configuration is compatible with the new version of the container.\n\nThis action is not can be undone from the bot.",
    "confirm_delete": "⚠️ Are you sure you want to delete container *$1*?\n\nThis action cannot be undone.",
    "confirm_change_tag": "⚠️ Are you sure you want to change the *$1*'s container tag to `$2`?\n\nRemember, this feature is in experimental phase.",
    "run_command_for_container": "Running [$1] of [$2]",
    "loading_file": "_Loading file... Please wait_",
    "show_info": "📜 Click on a container to see its information.",
    "logs": "📃 $1 logs",
    "compose": "📃 The $1 docker-compose. Remember, this feature is in experimental phase.",
    "showing_logs": "📃 These are the latest logs for *$1* container:\n\n```$1\n$2```",
    "UPDATED_CONTAINER_TEXT": "Up-to-date container ✅",
    "NEED_UPDATE_CONTAINER_TEXT": "Update available ⬆️"
}
