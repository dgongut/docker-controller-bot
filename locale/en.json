{
  "NEED_UPDATE_CONTAINER_TEXT": "Update available ⬆️",
  "UPDATED_CONTAINER_TEXT": "Up-to-date container ✅",
  "active": "🟢 Active",
  "already_updated": "✅ <b>$1</b> container is up to date",
  "already_updated_all": "✅ All containers seem to be up to date",
  "auto_update": "⬆️ <b>Update detected</b>:\n<b>$1\n</b>Update automatically.",
  "available_update": "⬆️ <b>Update available</b>:\n<b>$1</b>",
  "available_updates": "⬆️ <b>$1 Updates available</b>",
  "button_cancel": "❌ - Cancel",
  "button_close": "❌ - Close",
  "button_confirm": "⚠️ - Yes",
  "button_confirm_change_tag": "⚠️ - Yes, change it to $1",
  "button_confirm_delete": "⚠️ - Yes, delete",
  "button_confirm_update": "⬆️ - Yes, update",
  "button_containers": "Containers",
  "button_delete": "❌ - Delete",
  "button_images": "Images",
  "button_networks": "Networks",
  "button_restart": "🔄 - Restart",
  "button_restart_all": "🔄 - Restart all",
  "button_run": "🟢 - Start",
  "button_run_all": "🟢 - Start all",
  "button_stop": "🔴 - Stop",
  "button_stop_all": "🔴 - Stop all",
  "button_update": "⬆️ - Update",
  "button_update_all": "⬆️ - Update all",
  "button_volumes": "Volumes",
  "change_tag": "⚙️ Select a new tag for <b>$1</b>.",
  "change_tag_container": "⚙️ Click on a container to change its tag",
  "channel": "📰 <a href=\"https://t.me/dockercontrollerbotnews\">Changelog (in spanish)</a>",
  "check_for_updates": "Check for updates",
  "command_executed_without_output": "✅ Command executed successfully in container",
  "compose": "📃 The $1 docker-compose. Remember, this feature is in <i>experimental</i> phase.",
  "confirm_change_tag": "⚠️ Are you sure you want to change the <b>$1</b>'s container tag to <code>$2</code>?\n\n⚠️ Remember, this feature is in <i>experimental</i> phase.",
  "confirm_delete": "⚠️ Are you sure you want to delete container <b>$1</b>?\n\nThis action cannot be undone.",
  "confirm_exec": "⚡️ Are you sure you want to execute the following command in container <b>$1</b>?\n\n<pre><code>$2</code></pre>\n\nThis action cannot be undone.",
  "confirm_prune_containers": "🗑️ The command allows you to remove unused/stopped containers, Are you sure you want to remove all containers unused?\n\nThis operation cannot be undone.",
  "confirm_prune_images": "🗑️ The command allows you to remove unused images, Are you sure you want to remove all volumes not associated with an active container?\n\nThis operation cannot be undone.",
  "confirm_prune_networks": "🗑️ The command allows you to remove unused networks, Are you sure you want to remove all volumes not associated with an active container?\n\nThis operation cannot be undone.",
  "confirm_prune_volumes": "🗑️ The command allows you to remove unused volumes used, Are you sure you want to delete all volumes not associated with an active container?\n\nThis operation cannot be undone.",
  "confirm_restart_selected": "🔄 Are you sure you want to restart the following containers?\n$1",
  "confirm_run_selected": "🟢 Are you sure you want to start the following containers?\n$1",
  "confirm_stop_selected": "🔴 Are you sure you want to stop the following containers?\n$1",
  "confirm_update": "⚠️ Are you sure you want to update container <b>$1</b> with the new available image?\n\nIt is always recommended to check if the current configuration is compatible with the new version of the container.\n\nThis action is not can be undone from the bot.",
  "confirm_update_all": "⚠️ Are you sure you want to update the following containers? <b>$1</b>\n\nIt is always recommended to check if the current configuration is compatible with the new version of the container.\n\nThis action is not can be undone from the bot.",
  "container_does_not_exist": "❌ Container <b>$1</b> doesn't exist",
  "container_id": "Container ID",
  "containers": "Containers",
  "created_container": "🔵 Container <b>$1</b> has been <b>created</b>",
  "debug_auto_update": "Automatically updating the $1 container",
  "debug_checking_update": "Checking update: $1 ($2): LOCAL IMAGE [$3] - REMOTE IMAGE [$4]",
  "debug_container_deleting_old_container": "Deleting old container $1",
  "debug_container_found": "Container [$1] found",
  "debug_container_need_to_be_started": "The container was previously started, I start it.",
  "debug_container_not_found": "Container [$1] not found",
  "debug_creating_new_container": "Creating the container with the new image [$1]",
  "debug_deleted": "Deleted: [$1]",
  "debug_deleting_image": "Deleting image [$1]",
  "debug_disabled_update_daemon": "Update daemon disabled",
  "debug_edit_message_failed": "Failed to edit update message for $1. Error: [$2]",
  "debug_find_container": "Finding container id [$1]",
  "debug_ignore_check_for_update": "Checking update: $1 omitted",
  "debug_image_can_not_be_deleted": "Local image of $1 cannot be deleted. Reason: [$2]",
  "debug_muted_message": "Message [$1] omitted because muted",
  "debug_notifying_update": "Notifying about the update...",
  "debug_old_container_not_deleted": "Failed to delete old container $1, but update was successful",
  "debug_pulled_image": "$1 pull completed",
  "debug_pulling_image": "Pulling image [$1]",
  "debug_renaming_old_container": "Renaming old container before deleting [$1] -> [$1_old]",
  "debug_rollback_successful": "Rollback successful for $1. Old container has been restored.",
  "debug_rollback_update": "Performing rollback of update for $1",
  "debug_started_schedule_daemon": "Schedules daemon activated",
  "debug_started_update_daemon": "Update daemon activated",
  "debug_starting_bot": "Starting Docker-Controler-Bot (v$1)",
  "debug_starting_monitor_daemon": "State monitoring daemon enabled",
  "debug_stopping_container": "Container $1 is running. It will be stopped.",
  "debug_update_already_notified": "This update has already been reported. It is not notified.",
  "debug_update_detected": "$1 update detected! Deleting downloaded image [$2]",
  "debug_update_not_cached": "Queried for update $1 and it is not available: [$2]",
  "debug_updated_container": "Container $1 updated.",
  "debug_updating_container": "Updating container $1",
  "debug_waiting_next_check_updates": "Update checks completed, waiting $1 hours.",
  "debug_message_queue_started": "Message queue started",
  "debug_message_queue_error": "Error processing message queue: $1",
  "debug_message_queue_rate_limit": "Rate limit detected. Waiting $1s before retrying...",
  "debug_message_queue_retry": "Error sending message (attempt $1/$2). Retrying in $3s...",
  "debug_message_queue_final_error": "Final error sending message after $1 attempts: $2",
  "delete_container": "⚠️ Click on a container to delete it.\nThis action cannot be undone.",
  "delete_schedule": "🗑️ Click on a schedule to delete it",
  "deleted_container": "✅ Container <b>$1</b> successfully deleted.",
  "deleted_schedule": "✅ Schedule successfully deleted.\n<pre><code>$1</code></pre>",
  "deleting": "<i>Deleting</i> <b>$1</b>...",
  "donate": "This project is open source and I do it in my spare time. Donating will not enable any extra features. It is simply an ideal way to say thank you for the work behind a project like this. If you wish to do so, <a href=\"https://donate.dgongut.com\">click here</a>. Thank you very much ❤️",
  "donors_list": "🦸 <b>Heroes of Docker Controller Bot</b>\n\n$1\n\n<i>Thank you all for using the bot! A special thanks to these heroes for their generosity and altruistic spirit in making a donation with the /donate command. Your support makes a difference! 🚀💙</i>",
  "empty_schedule": "There are no stored schedules.\n\nUsage:\n<code>/schedule CRON run/stop/restart container</code>\n<code>/schedule CRON mute minutes</code>\n<code>/schedule CRON exec contenedor OUTPUT(0 - No, 1 - Yes) command</code>\n\nExample:\n/schedule 0 1 <b> </b> <b> run micontainer\n/schedule 30 4 </b> <b> </b> mute 5\n/schedule 15 2 <b> </b> * exec micontainer 1 cat /tmp/logs\n\nIf you are not familiar with CRON statements, <a href='https://crontab.guru/'>here</a> you have a website to generate it <u>following the standard</u>.",
  "error_adding_schedule": "❌ It appears that the instruction entered does not follow the correct format. Entered: <code>$1</code>\n\nUsage:\n<code>/schedule CRON run/stop/restart container</code>\n<code>/schedule CRON mute minutes</code>\n<code>/schedule CRON exec contenedor OUTPUT(0 - No, 1 - Yes) command</code>\n\nExample:\n/schedule 0 1 <b> </b> <b> run micontainer\n/schedule 30 4 </b> <b> </b> mute 5\n/schedule 15 2 <b> </b> * exec micontainer 1 cat /tmp/logs\n\nIf you are not familiar with CRON statements, <a href='https://crontab.guru/'>here</a> you have a website to generate it <u>following the standard</u>.",
  "error_bot_container_name": "Container name needs to be set in the CONTAINER_NAME variable",
  "error_bot_telegram_admin": "You need to configure the chatId of the user who will interact with the bot with the TELEGRAM_ADMIN variable",
  "error_bot_telegram_admin_anonymous": "You cannot be anonymous to control the bot. In the variable TELEGRAM_ADMIN you have to put your user id.",
  "error_bot_telegram_thread": "The variable TELEGRAM_THREAD is the thread within a supergroup, it is a numeric value. It has been set to $1.",
  "error_bot_token": "You need to configure the bot token with the TELEGRAM_TOKEN variable",
  "error_callback_execution": "Error processing callback '$1': $2",
  "error_callback_initialization": "Error in callback initialization: $1",
  "error_callback_processing": "❌ Error processing request",
  "error_can_not_do_that": "❌ Can't do that.",
  "error_checking_update_with_error": "Could not check update: [$1]",
  "error_creating_new_container_with_error": "Error creating and/or running the new container. The container information is: [$1]",
  "error_deleting_container": "❌ Failed to delete container <b>$1</b>. See bot logs for more information.",
  "error_deleting_container_with_error": "Could not delete container $1. Error: [$2]",
  "error_deleting_from_file_with_error": "Failed to delete the line from file. Error: [$1]",
  "error_executing_command_container": "❌ Could not execute command <pre><code>$1</code></pre> in container <b>$2</b>. See bot logs for more information.",
  "error_executing_command_container_with_error": "Error executing command [$1] in container $2. Error: [$3]",
  "error_getting_architecture": "Error getting system architecture. Error: [$1]",
  "error_getting_donors": "❌ Could not get donors. Try it later.",
  "error_getting_donors_with_error": "An error occurred while obtaining donors. Error: [$1]",
  "error_getting_tags": "❌ Could not get tags from <b>$1</b>. Repository not supported at this time.",
  "error_getting_tags_with_error": "Error getting $1 tags. Error: [$2]",
  "error_image_not_found": "❌ Image <b>$1</b> not found in registry. Check the image name.",
  "error_monitor_daemon": "An error occurred in the event daemon. Relaunching... Error: [$1]",
  "error_multiple_admin_only_with_group": "Multiple administrators can only be specified if used in a group (using the TELEGRAM_GROUP variable)",
  "error_prune_containers": "❌ An error occurred deleting unused containers. See the bot logs for more information.",
  "error_prune_containers_with_error": "An error has occurred deleting unused containers. Error: [$1]",
  "error_prune_images": "❌ An error occurred deleting unused images. See bot logs for more information.",
  "error_prune_images_with_error": "An error occurred deleting unused images. Error: [$1]",
  "error_prune_networks": "❌ An error occurred while deleting unused networks. See bot logs for more information.",
  "error_prune_networks_with_error": "An error occurred while deleting unused networks. Error: [$1]",
  "error_prune_volumes": "❌ An error has occurred deleting unused volumes. See the bot logs for more information.",
  "error_prune_volumes_with_error": "An error occurred deleting unused volumes. Error: [$1]",
  "error_pulling_image": "❌ Failed to pull image <b>$1</b>. Verify that the image exists in the registry.",
  "error_pulling_image_with_error": "Error pulling image $1. Error: [$2]",
  "error_reading_schedule_file": "An error occurred while processing the schedules file. Error: [$1]",
  "error_renaming_container": "❌ Failed to rename container <b>$1</b>. See bot logs for more information.",
  "error_renaming_container_with_error": "Could not rename container $1. Error: [$2]",
  "error_restarting_container": "❌ Failed to restart container <b>$1</b>. See bot logs for more information.",
  "error_restarting_container_with_error": "Could not restart container $1. Error: [$2]",
  "error_schedule_daemon": "An error occurred in the scheduling daemon. Relaunching... Error: [$1]",
  "error_sending_document": "Could not send document to $1. Error: [$2]",
  "error_sending_message": "Could not send message to $1: $2. Error: [$3]",
  "error_sending_updates": "Could not update container $1. Error: [$2]",
  "error_showing_compose_container": "❌ Failed to show docker compose for container <b>$1</b>. See bot logs for more information.",
  "error_showing_compose_container_with_error": "Could not show docker compose for container $1. Error: [$2]",
  "error_showing_info_container": "❌ The information for container <b>$1</b> could not be displayed. See the bot logs for more information.",
  "error_showing_info_container_with_error": "Could not display information for container $1. Error: [$2]",
  "error_showing_logs_container": "❌ The logs for container <b>$1</b> could not be displayed. See the bot logs for more information.",
  "error_showing_logs_container_with_error": "The logs for container $1 could not be shown. Error: [$2]",
  "error_starting_container": "❌ Failed to start container <b>$1</b>. See bot logs for more information.",
  "error_starting_container_with_error": "Could not start container $1. Error: [$2]",
  "error_stats_not_available": "Container $1 statistics not available. Error: [$2]",
  "error_stopping_container": "❌ Failed to stop container <b>$1</b>. See bot logs for more information.",
  "error_stopping_container_with_error": "Could not stop container $1. Error: [$2]",
  "error_tag_name_too_long": "Error adding a tag to the list because it is too long. Container: [$1]. Tag: [$2].",
  "error_update_daemon": "An error occurred in the update daemon. Relaunching... Error: [$1]",
  "error_updating_container": "❌ Failed to update container <b>$1</b>. See bot logs for more information.",
  "error_updating_container_with_error": "Could not update container $1. Error: [$2]",
  "error_use_mute_command": "❌ Please provide a valid number of minutes.\n · Usage: /mute <minutes>\nTo deactivate use /mute 0",
  "error_use_mute_schedule": "❌ Please provide a valid number of minutes\n · Usage: /schedule CRON mute <minutes>.",
  "error_writing_cache_with_error": "Error writing to cache. Key [$1]",
  "exec_command_container": "⚡️ Click on a container to execute a command in it.",
  "executed_command": "⚡️ The following command has been executed in container <b>$1</b>.\n\n<pre><code>$2</code></pre>\n\nResult:\n<pre><code>$3</code></pre>",
  "health": "Health",
  "health_healthy": "Healthy",
  "health_starting": "Starting",
  "health_unhealthy": "Unhealthy",
  "image_id": "Image ID",
  "information": "Information about",
  "loading_file": "<i>Loading file... Please wait</i>",
  "logs": "📃 $1 logs",
  "menu": "<b>🫡 Docker Controller Bot at your service</b>\n\nAvailable commands:\n\n · /list Complete list of containers.\n · /run Starts a container.\n · /stop Stops a container.\n · /restart Restarts a container.\n · /exec Run a command in a container.\n · /delete Delete a container.\n · /checkupdate Update a container.\n · /updateall Update all containers\n · /changetag Change container tag. ⚠️\n · /logs Shows the last logs of a container.\n · /logfile Shows the last logs of a container in file format.\n · /schedule Scheduling module.\n · /compose Extracts the docker-compose from a container. ⚠️\n · /prune Clean up unused objects on the system.\n · /mute <min> Mute notifications.\n · /info Displays information about a container.\n · /version Displays the current version.\n · /donate Donate to the developer\n · /donors Heroes of Docker-Controller-Bot\n\n⚠️ This function is in <i>experimental</i> phase.",
  "menu_change_tag": "Change container tag",
  "menu_compose": "Extract docker-compose from a container",
  "menu_delete": "Delete a container",
  "menu_donate": "Donate to the developer",
  "menu_donors": "Heroes of DCB",
  "menu_exec": "Run a command in a container",
  "menu_info": "Displays information about a container",
  "menu_list": "Complete list of containers",
  "menu_logfile": "Shows the complete logs of a container in file format",
  "menu_logs": "Shows the latest logs of a container",
  "menu_mute": "<min> Mute notifications",
  "menu_prune": "Prune allows you to remove unused objects from the system. \n\nPlease select the type of object to prune.",
  "menu_restart": "Restart a container",
  "menu_run": "Start a container",
  "menu_schedule": "Scheduling module",
  "menu_start": "Main menu",
  "menu_stop": "Stops a container",
  "menu_update": "Update a container",
  "menu_update_all": "Update all containers",
  "menu_version": "Shows the current version",
  "muted": "🔇 Bot muted for $1 minutes",
  "muted_singular": "🔇 Bot muted for 1 minute",
  "no_containers_to_restart": "🔄 No containers to restart",
  "no_containers_to_start": "🟢 No containers to start",
  "no_containers_to_stop": "🔴 No containers to stop",
  "obtaining_info": "<i>Obtaining information from</i> <b>$1</b>...",
  "prompt_enter_command": "⚡️ Enter the command to be executed in container <b>$1</b>.\n\nBe careful with the command you enter, as it will be executed directly in the container.",
  "prune_containers": "✅ Unused containers deleted. Space Reclaimed: <b>$1</b>",
  "prune_images": "✅ Unused images deleted. Space Reclaimed: <b>$1</b>",
  "prune_networks": "✅ Unused networks deleted",
  "prune_system": "🗑️ Cleans up unused system objects.\n\nPlease choose the type of object to remove:",
  "prune_volumes": "✅ Unused volumes deleted. Space Reclaimed: <b>$1</b>",
  "restart_a_container": "🟢 Click on a container to restart it",
  "restarted_container": "🟢 Container <b>$1</b> has been <b>restarted</b>",
  "restarting": "<i>Restarting</i> <b>$1</b>...",
  "run_command": "Running [$1]",
  "run_command_for_container": "Running [$1] of [$2]",
  "run_command_for_container_command": "Running [$1] of [$2]. Command: [$3]",
  "schedule_saved": "✅ Saved schedule.\n<pre><code>$1</code></pre>",
  "self_update_message": "⚙️ Now the bot will restart.\n\nPlease wait a moment, this may take up to 1 minute.\n\nThe bot will notify you when it is available again.",
  "show_compose": "📃 Click on a container to see its docker-compose.\n\nThis function is in <b>experimental</b> phase and may contain errors, it is recommended to check the docker-compose.",
  "show_info": "📜 Click on a container to see its information.",
  "show_logs": "📃 Click on a container to see its latest logs",
  "show_logsfile": "📃 Click on a container to see its logs in file mode",
  "showing_logs": "📃 These are the latest logs for <b>$1</b> container:\n<pre><code>$2</code></pre>",
  "start_a_container": "🟢 Click on a container to start it",
  "started_container": "🟢 Container <b>$1</b> has been <b>started</b>",
  "starting": "<i>Starting</i> <b>$1</b>...",
  "status": "Status",
  "status_running": "Running",
  "status_stopped": "Stopped",
  "status_updates": "Updates",
  "stop_a_container": "🔴 Click on a container to stop it",
  "stopped_container": "🔴 Container <b>$1</b> has been <b>stopped</b>",
  "stopping": "<i>Stopping</i> <b>$1</b>...",
  "unmuted": "🔉 Bot notifies again",
  "update_container": "⚠️ Click on a container to check for updates now",
  "updated_container": "✅ Container <b>$1</b> successfully updated.",
  "updating": "<i>Updating</i> <b>$1</b>...",
  "updating_creating": "<i>Updating</i> <b>$1</b>...\nCreating container...",
  "updating_deleting_old": "<i>Updating</i> <b>$1</b>...\nDeleting old container...",
  "updating_downloading": "<i>Updating</i> <b>$1</b>...\nDownloading...",
  "updating_starting": "<i>Updating</i> <b>$1</b>...\nStarting container...",
  "updating_stopping": "<i>Updating</i> <b>$1</b>...\nStopping container...",
  "used_image": "Used image",
  "user_not_admin": "❌ This bot does not belong to you.\n\nIf you want to control your docker containers via telegram deploy me on your server.\n\nTake a look at <a href=\"https://hub.docker.com /r/dgongut/docker-controller-bot\">DockerHub</a> where you will find a docker-compose. \n\nAre you curious? The code is published on <a href=\"https://github.com/dgongut/docker-controller- bot\">GitHub</a>.\n\nIf you have questions, ask me, I'm @dgongut",
  "version": "⚙️ <i>Version: $1</i>\nDeveloped with ❤️ by @dgongut\n\nIf you find any bugs or suggestions, contact me.\n\nYou can find everything related to this bot at <a href=\"https://hub.docker.com/r/dgongut/docker-controller-bot\">DockerHub</a> or on <a href=\"https://github.com/dgongut/docker-controller-bot\">GitHub</a>.\n\nTo watch the news channel in Spanish, <a href=\"https://t.me/dockercontrollerbotnews\">click here</a>.",
  "warning_not_admin": "User $1 (@$2) is not an administrator and has tried to use the bot."
}